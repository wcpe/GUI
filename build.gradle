plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.dokka' version "1.6.10"
}

group 'moe.him188'
version '1.16.0-SNAPSHOT'

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
    from('src/main/java') {
        include '**/*.xml'
    }
    from('src/main/kotlin') {
        include '**/*.xml'
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://maven.wcpe.top/repository/maven-public/"
    }
    mavenCentral()
}

dependencies {
    implementation "cn.nukkit:nukkit:1.0-SNAPSHOT"

    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId project.group
            artifactId project.name
            version project.version
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            credentials {
                allowInsecureProtocol = true
                username = project.findProperty("username").toString()
                password = project.findProperty("password").toString()
            }
            def releasesRepoUrl = "http://maven.wcpe.top/repository/maven-releases/"
            def snapshotsRepoUrl = "http://maven.wcpe.top/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}


